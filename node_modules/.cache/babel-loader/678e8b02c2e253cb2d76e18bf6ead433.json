{"ast":null,"code":"var _jsxFileName = \"D:\\\\Arquivos Willian\\\\Documents\\\\documentos-William\\\\test-compass-uol\\\\src\\\\pages\\\\repositorio\\\\Repos_url.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Box } from '@material-ui/core';\nimport '../../master.css';\nimport { TextButton, ButtonEnter } from '../../theme/Tema';\nimport { BackgroundDiv, BoxInfoRepo, NamePage, BoxGrid, IconBack } from '../../theme/Tema';\nimport ArrowBack from '../../components/Components';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DivStarred_repo = styled.div`\ndisplay:flex ;\njustify-content:center;\n`;\n_c = DivStarred_repo;\nconst BackgroundRepo = styled.div`\n\n`;\n_c2 = BackgroundRepo;\n\nfunction Repos_url() {\n  _s();\n\n  const params = useParams().username;\n  const [infoRepo, setInfoRepo] = useState([]);\n  const history = useHistory();\n  const [starred, setStarred] = useState([]);\n  useEffect(() => {\n    user_repo();\n    validStarred();\n  }, []);\n\n  const user_repo = () => {\n    axios.get(`https://api.github.com/users/${params}/repos`).then(res => {\n      setInfoRepo(res.data);\n    }).catch(err => {\n      alert(err);\n    });\n  };\n\n  const map_repositorios = infoRepo.map(repo => {\n    return /*#__PURE__*/_jsxDEV(BoxInfoRepo, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"nameRepo\",\n        children: repo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, repo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  });\n\n  const validStarred = () => {\n    axios.get(`https://api.github.com/users/${params}/starred`).then(res => {\n      setStarred(res.data);\n    }).catch(err => {\n      alert(err.messege);\n    });\n  };\n\n  const goStarred = () => {\n    if (starred.length === 0) {\n      alert(\"Não há Starred's\");\n    } else {\n      history.push(`/users/${params}/starred`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(BackgroundRepo, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      bgcolor: \"white\",\n      height: \"100px\",\n      children: /*#__PURE__*/_jsxDEV(NamePage, {\n        className: \"iconP\",\n        children: \"Reposit\\xF3rios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoxGrid, {\n      display: \"flex\",\n      children: map_repositorios\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DivStarred_repo, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(ButtonEnter, {\n        onClick: goStarred,\n        children: /*#__PURE__*/_jsxDEV(TextButton, {\n          children: \"Starred\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Repos_url, \"D7JlLrbCTZypaW4MHGYAQFvDMTs=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c3 = Repos_url;\nexport default Repos_url;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DivStarred_repo\");\n$RefreshReg$(_c2, \"BackgroundRepo\");\n$RefreshReg$(_c3, \"Repos_url\");","map":{"version":3,"sources":["D:/Arquivos Willian/Documents/documentos-William/test-compass-uol/src/pages/repositorio/Repos_url.js"],"names":["React","useEffect","useState","axios","useHistory","useParams","Box","TextButton","ButtonEnter","BackgroundDiv","BoxInfoRepo","NamePage","BoxGrid","IconBack","ArrowBack","styled","DivStarred_repo","div","BackgroundRepo","Repos_url","params","username","infoRepo","setInfoRepo","history","starred","setStarred","user_repo","validStarred","get","then","res","data","catch","err","alert","map_repositorios","map","repo","name","id","messege","goStarred","length","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Box } from '@material-ui/core';\r\nimport '../../master.css'\r\nimport { TextButton, ButtonEnter } from '../../theme/Tema';\r\nimport { BackgroundDiv, BoxInfoRepo, NamePage, BoxGrid, IconBack } from '../../theme/Tema';\r\nimport  ArrowBack from '../../components/Components';\r\nimport styled from 'styled-components';\r\n\r\nconst DivStarred_repo = styled.div`\r\ndisplay:flex ;\r\njustify-content:center;\r\n`\r\nconst BackgroundRepo = styled.div`\r\n\r\n`\r\n\r\nfunction Repos_url() {\r\n  const params = useParams().username\r\n  const [infoRepo, setInfoRepo] = useState([])\r\n  const history = useHistory()\r\n  const [starred, setStarred] = useState([])\r\n  useEffect(() => {\r\n    user_repo()\r\n    validStarred()\r\n  }, [])\r\n\r\n  const user_repo = () => {\r\n    axios.get(`https://api.github.com/users/${params}/repos`)\r\n      .then((res) => {\r\n        setInfoRepo(res.data)\r\n\r\n      }).catch((err) => {\r\n        alert(err)\r\n\r\n      })\r\n  }\r\n\r\n  const map_repositorios = infoRepo.map((repo) => {\r\n    return (\r\n      <BoxInfoRepo key={repo.id}>\r\n        <p id='nameRepo'>{repo.name}</p>\r\n\r\n      </BoxInfoRepo>\r\n\r\n    )\r\n  })\r\n \r\n  const validStarred = () => {\r\n    axios.get(`https://api.github.com/users/${params}/starred`)\r\n      .then((res) => {\r\n        setStarred(res.data)\r\n\r\n      }).catch((err) => {\r\n        alert(err.messege)\r\n\r\n      })\r\n  }\r\n\r\n  const goStarred = () => {\r\n    if (starred.length === 0) {\r\n      alert(\"Não há Starred's\")\r\n    } else {\r\n      history.push(`/users/${params}/starred`)\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <BackgroundRepo>\r\n      <Box bgcolor='white' height='100px'>\r\n        <NamePage className='iconP'>Repositórios</NamePage>\r\n      </Box>\r\n      <BoxGrid display='flex'>\r\n        {map_repositorios}\r\n      </BoxGrid>\r\n    <ArrowBack/>\r\n      <DivStarred_repo display='flex' justifyContent='center'>\r\n        <ButtonEnter onClick={goStarred}>\r\n          <TextButton >Starred</TextButton>\r\n        </ButtonEnter>\r\n      </DivStarred_repo>\r\n\r\n    </BackgroundRepo>\r\n\r\n  );\r\n}\r\n\r\nexport default Repos_url;"]},"metadata":{},"sourceType":"module"}